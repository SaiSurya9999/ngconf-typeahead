{"version":3,"sources":["../../../projects/ngconf-search/src/lib/ngconf-search.service.ts","../../../projects/ngconf-search/src/lib/ngconf-search.component.ts","../../../projects/ngconf-search/src/lib/search-filter.pipe.ts","../../../projects/ngconf-search/src/lib/ngconf-search.module.ts"],"names":["Injectable","args","providedIn","NgconfSearchComponent","prototype","ngOnInit","Component","selector","template","SearchFilterPipe","transform","value","opt","term","toString","toLowerCase","prop","filter","item","JSON","stringify","includes","map","a","Pipe","name","pure","NgModule","declarations","imports","exports"],"mappings":"yRAOE,4HALDA,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,kECWZ,SAAAC,YAEAA,EAAAC,UAAAC,SAAA,sCAdDC,EAAAA,UAASL,KAAA,CAAC,CACTM,SAAU,oBACVC,SAAU,iHCSZ,SAAAC,YAEEA,EAAAL,UAAAM,UAAA,SAAUC,EAAYC,GAGpB,IAAKD,EAAO,OAAO,KAEnB,IAAKC,EAAIC,KAAM,OAAOF,EAQtB,GALAC,EAAIC,KAAOD,EAAIC,KAAKC,WAAWC,eAK3BH,EAAII,KAWN,OAAOL,EAAMM,QAAO,SAAUC,GAE5B,OAAOC,KAAKC,UAAUF,GAAMH,cAAcM,SAAST,EAAIC,KAAKC,eAZ9D,GAA2B,IAAvBF,EAAII,KAAKF,WAAkB,CAChBH,EAAMW,KAAI,SAAAC,GAAK,OAAAA,EAAEX,EAAII,KAAKF,eAEvC,OAAOH,EAAMM,QAAO,SAAUC,GAE5B,OAAOC,KAAKC,UAAUF,EAAKN,EAAII,KAAKF,aAAaC,cAAcM,SAAST,EAAIC,KAAKC,0CA1B1FU,EAAAA,KAAIvB,KAAA,CAAC,CACJwB,KAAM,eACNC,MAAM,YCER,iCANCC,EAAAA,SAAQ1B,KAAA,CAAC,CACR2B,aAAc,CAACzB,EAAsBM,GACrCoB,QAAS,GAETC,QAAS,CAAC3B,EAAsBM","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgconfSearchService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-ngconf-search',\n  template: `\n    <p>\n      ngconf-search works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class NgconfSearchComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n//Configuration for Pipe Input Args\nexport interface opt {\n  term: string;\n  prop: string;\n}\n\n@Pipe({\n  name: 'searchFilter',\n  pure: false\n})\n\nexport class SearchFilterPipe implements PipeTransform {\n\n  transform(value: any, opt?: opt): any {\n\n    //If Array in ngFor is empty\n    if (!value) return null;\n    //If Search term is Empty\n    if (!opt.term) return value;\n\n    //For Better Results\n    opt.term = opt.term.toString().toLowerCase();\n\n    //let result = value.map(({ name }) => name);\n    //let result = value.map(a => a.name);\n\n    if (opt.prop) {\n      if (opt.prop.toString() != \"\") {\n        let result = value.map(a => a[opt.prop.toString()]);\n        //Filtered Results based on Search Term\n        return value.filter(function (item) {\n          // console.log(item);\n          return JSON.stringify(item[opt.prop.toString()]).toLowerCase().includes(opt.term.toString());\n        });\n      }\n    } else {\n      //Filtered Results based on Search Term\n      return value.filter(function (item) {\n        // console.log(item);\n        return JSON.stringify(item).toLowerCase().includes(opt.term.toString());\n      });\n    }\n\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { NgconfSearchComponent } from './ngconf-search.component';\nimport { SearchFilterPipe } from './search-filter.pipe';\n\n\n\n@NgModule({\n  declarations: [NgconfSearchComponent,SearchFilterPipe],\n  imports: [\n  ],\n  exports: [NgconfSearchComponent,SearchFilterPipe]\n})\nexport class NgconfSearchModule { }\n"]}